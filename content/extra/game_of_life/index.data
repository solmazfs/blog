#version 100

precision mediump float;

varying vec2 fragTexCoord;
varying vec4 fragColor;

uniform sampler2D texture0;
uniform vec4 colDiffuse;

uniform vec2 resolution;
uniform float uTime;

void main() {
    float pixel_size_x = 1.0/resolution.x;
    float pixel_size_y = 1.0/resolution.y;
    vec2 q = fragTexCoord;
    vec2 uv = q;//curve( q );
    vec3 oricol = texture2D( texture0, vec2(q.x,q.y) ).xyz;
    vec3 col;
	float x =  sin(0.3*uTime+uv.y*21.0)*sin(0.7*uTime+uv.y*29.0)*sin(0.3+0.33*uTime+uv.y*31.0)*0.0005 ;

    col.r = texture2D(texture0,vec2(x+uv.x+0.001,uv.y+0.001)).x+0.05;
    col.g = texture2D(texture0,vec2(x+uv.x+0.000,uv.y-0.002)).y+0.05;
    col.b = texture2D(texture0,vec2(x+uv.x-0.002,uv.y+0.000)).z+0.05;
    col.r += 0.08*texture2D(texture0,0.75*vec2(x+0.025, -0.027)+vec2(uv.x+0.001,uv.y+0.001)).x;
    col.g += 0.05*texture2D(texture0,0.75*vec2(x+-0.022, -0.02)+vec2(uv.x+0.000,uv.y-0.002)).y;
    col.b += 0.08*texture2D(texture0,0.75*vec2(x+-0.02, -0.018)+vec2(uv.x-0.002,uv.y+0.000)).z;

    float scans = clamp( 0.35+0.05*sin(3.5*uTime+uv.y*resolution.y*1.5), 0.0, 1.0);
	
	float s = pow(scans,0.75);
	col = col *vec3(0.4+0.7*s);

    col *= 1.0+0.035*sin(6.0*uTime);

	col*=1.0-0.75*vec3(clamp((mod(fragTexCoord.x, 2.0)-1.0)*1.0,0.0,1.0));

    gl_FragColor = vec4(col,1.0);
}
// https://www.shadertoy.com/view/Ws2GD1 by Belocio

#version 330

in vec2 fragTexCoord;
in vec4 fragColor;

uniform sampler2D texture0;
uniform vec4 colDiffuse;

uniform vec2 resolution;
uniform float uTime;

out vec4 finalColor;

vec2 curve(vec2 uv)
{
	uv = (uv - 0.5) * 2.0;
	uv *= 1.1;
	uv.x *= 1.0 + pow((abs(uv.y) / 5.0), 3.0);
	uv.y *= 1.0 + pow((abs(uv.x) / 4.0), 3.0);
	uv  = (uv / 2.0) + 0.5;
	uv =  uv *0.92 + 0.04;
	return uv;
}

void main() {
    float pixel_size_x = 1.0/resolution.x;
    float pixel_size_y = 1.0/resolution.y;
    vec2 q = fragTexCoord;
    vec2 uv = curve( q );
    vec3 oricol = texture( texture0, vec2(q.x,q.y) ).xyz;
    vec3 col;
	float x =  sin(0.3*uTime+uv.y*21.0)*sin(0.7*uTime+uv.y*29.0)*sin(0.3+0.33*uTime+uv.y*31.0)*0.0005 ;

    col.r = texture(texture0,vec2(x+uv.x+0.001,uv.y+0.001)).x+0.05;
    col.g = texture(texture0,vec2(x+uv.x+0.000,uv.y-0.002)).y+0.05;
    col.b = texture(texture0,vec2(x+uv.x-0.002,uv.y+0.000)).z+0.05;
    col.r += 0.08*texture(texture0,0.75*vec2(x+0.025, -0.027)+vec2(uv.x+0.001,uv.y+0.001)).x;
    col.g += 0.05*texture(texture0,0.75*vec2(x+-0.022, -0.02)+vec2(uv.x+0.000,uv.y-0.002)).y;
    col.b += 0.08*texture(texture0,0.75*vec2(x+-0.02, -0.018)+vec2(uv.x-0.002,uv.y+0.000)).z;
    
    float vig = (0.0 + 1.0*16.0*uv.x*uv.y*(1.0-uv.x)*(1.0-uv.y));
	col *= vec3(pow(vig,0.15));

    col *= vec3(0.9,1.1,0.9);
    
	float scans = clamp( 0.35+0.05*sin(3.5*uTime+uv.y*resolution.y*1.5), 0.0, 1.0);
	
	float s = pow(scans,0.75);
	col = col *vec3(0.4+0.7*s);

    col *= 1.0+0.035*sin(110.0*uTime);

	col*=1.0-0.75*vec3(clamp((mod(fragTexCoord.x, 2.0)-1.0)*1.0,0.0,1.0));
	
    float comp = smoothstep( 0.1, 0.9, sin(uTime) );
    if (uv.x < 0.0 || uv.x > 1.0) col *= 0.0;
    if (uv.y < 0.0 || uv.y > 1.0) col *= 0.0;

    finalColor = vec4(col,1.0);
}
