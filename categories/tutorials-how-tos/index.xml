<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tutorials &amp; How-to's on blog.solmazfs</title><link>https://solmazfs.github.io/blog/categories/tutorials-how-tos/</link><description>Recent content in Tutorials &amp; How-to's on blog.solmazfs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© 2021-2022</copyright><lastBuildDate>Fri, 12 Aug 2022 20:59:59 +0300</lastBuildDate><atom:link href="https://solmazfs.github.io/blog/categories/tutorials-how-tos/index.xml" rel="self" type="application/rss+xml"/><item><title>Making Tic-Tac-Toe Game with using 'raylib' - Part1</title><link>https://solmazfs.github.io/blog/posts/tic-tac-toe-pt1/</link><pubDate>Fri, 12 Aug 2022 20:59:59 +0300</pubDate><guid>https://solmazfs.github.io/blog/posts/tic-tac-toe-pt1/</guid><description>I&amp;rsquo;ll skip general info about what is raylib and how to setup for different platforms. You can found these information in official repo.[1]
Basic setup for ready to use // test it before release the post
#include &amp;lt;stdio.h&amp;gt; // library that you can code game #include &amp;#34;raylib.h&amp;#34; const int _SCREEN_W = 512; const int _SCREEN_H = 512; Color color_bg = {207,188,149,255}; Color color_line = {32,54,51,255}; Rectangle boxIndex[3][3]; // methods void game_board(); void spaces_collision_box(); bool spaces_mouse_entered(); int main() { InitWindow(_SCREEN_W,_SCREEN_H,&amp;#34;main&amp;#34;); SetWindowState(FLAG_VSYNC_HINT); SetTargetFPS(60); // start here RenderTexture2D target = LoadRenderTexture(_SCREEN_W,_SCREEN_H); Rectangle source = {0,0,target.</description></item><item><title>Command Line General (Linux)</title><link>https://solmazfs.github.io/blog/posts/command-line-general/</link><pubDate>Fri, 08 Apr 2022 13:53:58 +0300</pubDate><guid>https://solmazfs.github.io/blog/posts/command-line-general/</guid><description>imagemagick didder ffmpeg other imagemagick Resize image;
convert -resize 50% input.png output.png Add border to an image;
convert -bordercolor white -border 3 -bordercolor black -border 86 input.png output.png Image dithering;
convert &amp;lt; input .png &amp;gt; -resize &amp;lt; 800x800 &amp;gt; -colorspace gray -ordered-dither o8x8 &amp;lt; output .png &amp;gt; didder Image dithering;
didder --palette &amp;#39;black white&amp;#39; -i input.png -o output.png bayer 16x16 ffmpeg Cut specific timeline from video;
ffmpeg -ss &amp;lt; starting point &amp;gt; -i &amp;lt; input &amp;gt; -t &amp;lt; how long &amp;gt; -vcodec copy -acodec copy &amp;lt; output &amp;gt; #e.</description></item><item><title>Arch Linux Installation (Legacy)</title><link>https://solmazfs.github.io/blog/posts/arch-linux-installation-legacy/</link><pubDate>Mon, 29 Nov 2021 00:10:24 +0300</pubDate><guid>https://solmazfs.github.io/blog/posts/arch-linux-installation-legacy/</guid><description>[Legacy] BIOS mode
Make Bootable USB Wipe Disk Disk partitioning Encryption Create Physical&amp;amp;Logical Volume(s) Formatting&amp;amp;Mounting Install base Generate fstab Enter new system Timezone Language root&amp;amp;user setup Luks key TODO Grub Exit Update System Install Gnome Optional Step 1 ➥ (make bootable USB):
Download iso: https://archlinux.org/download/ Burn archlinux-version-x86_64.iso file to a USB drive. to do that;
lsblk # find out name of USB --&amp;gt; e.g. &amp;#34;sdb&amp;#34; !choose right one. # Make sure USB drive is empty.</description></item></channel></rss>