<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>game-dev on blog.solmazfs</title><link>https://solmazfs.github.io/blog/tags/game-dev/</link><description>Recent content in game-dev on blog.solmazfs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© 2021-2022</copyright><lastBuildDate>Fri, 12 Aug 2022 20:59:59 +0300</lastBuildDate><atom:link href="https://solmazfs.github.io/blog/tags/game-dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Making Tic-Tac-Toe Game with using 'raylib' - Part1</title><link>https://solmazfs.github.io/blog/posts/tic-tac-toe-pt1/</link><pubDate>Fri, 12 Aug 2022 20:59:59 +0300</pubDate><guid>https://solmazfs.github.io/blog/posts/tic-tac-toe-pt1/</guid><description>I&amp;rsquo;ll skip general info about what is raylib and how to setup for different platforms. You can found these information in official repo.[1]
Basic setup for ready to use // test it before release the post
#include &amp;lt;stdio.h&amp;gt; // library that you can code game #include &amp;#34;raylib.h&amp;#34; const int _SCREEN_W = 512; const int _SCREEN_H = 512; Color color_bg = {207,188,149,255}; Color color_line = {32,54,51,255}; Rectangle boxIndex[3][3]; // methods void game_board(); void spaces_collision_box(); bool spaces_mouse_entered(); int main() { InitWindow(_SCREEN_W,_SCREEN_H,&amp;#34;main&amp;#34;); SetWindowState(FLAG_VSYNC_HINT); SetTargetFPS(60); // start here RenderTexture2D target = LoadRenderTexture(_SCREEN_W,_SCREEN_H); Rectangle source = {0,0,target.</description></item><item><title>Bitmap Font (GODOT)</title><link>https://solmazfs.github.io/blog/posts/bitmap-font/</link><pubDate>Fri, 08 Apr 2022 13:47:04 +0300</pubDate><guid>https://solmazfs.github.io/blog/posts/bitmap-font/</guid><description>In this guide we&amp;rsquo;ll learn how to use our custom designed font image for our game.
drawing font [libresprite] In this part, we will draw the characters needed for only &amp;ldquo;HELLO WORLD!&amp;rdquo;. In future, you can draw the required characters for your project with the similar logic.[1]
Create 90x10 canvas. Fill the background with #ff00ff color. Create a new layer and draw a total of 9 8x8 pixel squares. Color: #0000ff There will be 2 pixel space between each square but 1 pixel from the corners.</description></item></channel></rss>